#Dados (-1,3), (0,-7), (4,7), (5,11)
# Estimar el polinomio interpolante

p0 = (-1, 3)
p1 = (0, -7)
p2 = (4, 7)
p3 = (5, 11)
x = 0


def fn(x, p0, p1, p2, p3):
    y = (((x - p1[0]) * (x - p2[0]) * (x - p3[0])) /
         ((p0[0] - p1[0]) * (p0[0] - p2[0]) * (p0[0] - p3[0]))) * p0[1]

    y += (((x - p0[0]) * (x - p2[0]) * (x - p3[0])) /
          ((p1[0] - p0[0]) * (p1[0] - p2[0]) * (p1[0] - p3[0]))) * p1[1]

    y += (((x - p0[0]) * (x - p1[0]) * (x - p3[0])) /
          ((p2[0] - p0[0]) * (p2[0] - p1[0]) * (p2[0] - p3[0]))) * p2[1]

    y += (((x - p0[0]) * (x - p1[0]) * (x - p2[0])) /
          ((p3[0] - p0[0]) * (p3[0] - p1[0]) * (p3[0] - p2[0]))) * p3[1]

    return y


def fn2(x):
    y = -((13/30) * pow(x, 3)) + (4 * pow(x, 2)) - ((167/30) * x) - 7
    return y


print("Valor de y:", fn(x, p0, p1, p2, p3))
print("y = -13/30 x^3 + 4 x^2 - 167/30 x - 7")
print("when x = 0 then", fn2(x))
